{"version":3,"sources":["../../../src/web.ts"],"names":[],"mappings":"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","file":"static/js/161.4731f5bf.chunk.js","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.not_supported_mssg = \"This method is not supported\";\n        this.options_missing_mssg = \"Firebase options are missing\";\n        this.duplicate_app_mssg = \"Firebase app already exists\";\n        this.analytics_missing_mssg = \"Firebase analytics is not initialized. Make sure initializeFirebase() is called once\";\n        this.scripts = [\n            {\n                key: \"firebase-app\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js\",\n            },\n            {\n                key: \"firebase-ac\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js\",\n            },\n        ];\n        this.ready = new Promise((resolve) => (this.readyResolver = resolve));\n        this.configure();\n    }\n    /**\n     * Configure and Initialize FirebaseApp if not present\n     * @param options - web app's Firebase configuration\n     * @returns firebase analytics object reference\n     * Platform: Web\n     */\n    initializeFirebase(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (this.hasFirebaseInitialized()) {\n                reject(this.duplicate_app_mssg);\n                return;\n            }\n            if (!options) {\n                reject(this.options_missing_mssg);\n                return;\n            }\n            const app = window.firebase.initializeApp(options);\n            this.analyticsRef = app.analytics();\n            resolve(this.analyticsRef);\n        });\n    }\n    /**\n     * Sets the user ID property.\n     * @param options - userId: unique identifier of the user to log\n     * Platform: Web/Android/iOS\n     */\n    setUserId(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { userId } = options || { userId: undefined };\n            if (!userId) {\n                reject(\"userId property is missing\");\n                return;\n            }\n            this.analyticsRef.setUserId(userId);\n            resolve();\n        });\n    }\n    /**\n     * Sets a user property to a given value.\n     * @param options - name: The name of the user property to set.\n     *                  value: The value of the user property.\n     * Platform: Web/Android/iOS\n     */\n    setUserProperty(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, value } = options || { name: undefined, value: undefined };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            if (!value) {\n                reject(\"value property is missing\");\n                return;\n            }\n            let property = {};\n            property[name] = value;\n            this.analyticsRef.setUserProperties(property);\n            resolve();\n        });\n    }\n    /**\n     * Retrieves the app instance id from the service.\n     * @returns - instanceId: current instance if of the app\n     * Platform: Web/Android/iOS\n     */\n    getAppInstanceId() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Sets the current screen name, which specifies the current visual context in your app.\n     * @param options - screenName: the activity to which the screen name and class name apply.\n     *                  nameOverride: the name of the current screen. Set to null to clear the current screen name.\n     * Platform: Android/iOS\n     */\n    setScreenName(_options) {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Clears all analytics data for this app from the device and resets the app instance id.\n     * Platform: Android/iOS\n     */\n    reset() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Logs an app event.\n     * @param options - name: unique name of the event\n     *                  params: the map of event parameters.\n     * Platform: Web/Android/iOS\n     */\n    logEvent(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, params } = options || {\n                name: undefined,\n                params: undefined,\n            };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            this.analyticsRef.logEvent(name, params);\n            resolve();\n        });\n    }\n    /**\n     * Sets whether analytics collection is enabled for this app on this device.\n     * @param options - enabled: boolean true/false to enable/disable logging\n     * Platform: Web/Android/iOS\n     */\n    setCollectionEnabled(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { enabled } = options || { enabled: false };\n            this.analyticsRef.setAnalyticsCollectionEnabled(enabled);\n            resolve();\n        });\n    }\n    /**\n     * Sets the duration of inactivity that terminates the current session.\n     * @param options - duration: duration of inactivity\n     * Platform: Android/iOS\n     */\n    setSessionTimeoutDuration(_options) {\n        return new Promise((_resolve, reject) => {\n            reject(this.not_supported_mssg);\n        });\n    }\n    /**\n     * Returns analytics reference object\n     */\n    get remoteConfig() {\n        return this.analyticsRef;\n    }\n    enable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(true);\n            resolve();\n        });\n    }\n    disable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(false);\n            resolve();\n        });\n    }\n    /**\n     * Ready resolver to check and load firebase analytics\n     */\n    async configure() {\n        try {\n            await this.loadScripts();\n            if (window.firebase &&\n                window.firebase.analytics &&\n                this.hasFirebaseInitialized()) {\n                this.analyticsRef = window.firebase.analytics();\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n        const interval = setInterval(() => {\n            if (!window.firebase) {\n                return;\n            }\n            clearInterval(interval);\n            this.readyResolver();\n        }, 50);\n    }\n    /**\n     * Check for existing loaded script and load new scripts\n     */\n    loadScripts() {\n        const firebaseAppScript = this.scripts[0];\n        const firebaseAnalyticsScript = this.scripts[1];\n        return new Promise(async (resolve, _reject) => {\n            const scripts = this.scripts.map((script) => script.key);\n            if (document.getElementById(scripts[0]) &&\n                document.getElementById(scripts[1])) {\n                return resolve(null);\n            }\n            await this.loadScript(firebaseAppScript.key, firebaseAppScript.src);\n            await this.loadScript(firebaseAnalyticsScript.key, firebaseAnalyticsScript.src);\n            resolve(null);\n        });\n    }\n    /**\n     * Loaded single script with provided id and source\n     * @param id - unique identifier of the script\n     * @param src - source of the script\n     */\n    loadScript(id, src) {\n        return new Promise((resolve, reject) => {\n            const file = document.createElement(\"script\");\n            file.type = \"text/javascript\";\n            file.src = src;\n            file.id = id;\n            file.onload = resolve;\n            file.onerror = reject;\n            document.querySelector(\"head\").appendChild(file);\n        });\n    }\n    /**\n     * Returns true/false if firebase object reference exists inside window\n     */\n    hasFirebaseInitialized() {\n        if (!window.firebase) {\n            return false;\n        }\n        const firebaseApps = window.firebase.apps;\n        if (firebaseApps && firebaseApps.length === 0) {\n            return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}